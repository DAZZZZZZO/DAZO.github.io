<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DAZO`s WORLD</title>
  
  <subtitle>无事小神仙</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-09-16T03:04:37.575Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Dazo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>雅思口语</title>
    <link href="http://example.com/archives/cc13c4f6.html"/>
    <id>http://example.com/archives/cc13c4f6.html</id>
    <published>2022-09-16T03:03:41.000Z</published>
    <updated>2022-09-16T03:04:37.575Z</updated>
    
    <content type="html"><![CDATA[<h1 id="雅思口语"><a href="#雅思口语" class="headerlink" title="雅思口语"></a>雅思口语</h1><h2 id="Talk-about-your-free-time"><a href="#Talk-about-your-free-time" class="headerlink" title="Talk about your free time"></a>Talk about your free time</h2><h3 id="The-styles-of-hobbies"><a href="#The-styles-of-hobbies" class="headerlink" title="The styles of hobbies"></a>The styles of hobbies</h3><h4 id="Indoor-activities"><a href="#Indoor-activities" class="headerlink" title="Indoor activities"></a>Indoor activities</h4><p>Chilling out &#x2F;hanging out with friends</p><h4 id="outdoor-activities"><a href="#outdoor-activities" class="headerlink" title="outdoor activities"></a>outdoor activities</h4><p>traveling&#x2F; gardening &#x2F;aports</p><h4 id="collecting-thins"><a href="#collecting-thins" class="headerlink" title="collecting thins"></a>collecting thins</h4><p>stamps &#x2F;coins &#x2F;nfts&#x3D;non-fungible token(a unique item)</p><h4 id="Creative-activities"><a href="#Creative-activities" class="headerlink" title="Creative activities"></a>Creative activities</h4><p>playing a musical instrument &#x2F;paiting &#x2F;knitting &#x2F; taking photos</p><h3 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h3><span id="more"></span><ul><li>I get up to a lot of things &#x3D; do an activity</li><li>like doing</li></ul><p>&#x2F; to do 🡪 it`s a choice or habit</p><ul><li>I`m fond of&#x2F; into&#x2F; passionate about playing video games</li></ul><p>I like to dabble in cooking -&gt; to do sth casually, less seriously</p><p>I play the guitar but I am just an aficionado&#x2F; amateur</p><ul><li>I paint whenever I can &#x2F; as often as I can &#x2F;whenever I get a chance</li></ul><p>I don’t get round to painting as much as I would like</p><ul><li>I recently took up painting -&gt; start</li><li>I am new to it</li><li>I started painting a couple of years ago</li></ul><p>I decided to have a go at painting -&gt; to try sth new</p><p>I decided to try my hand at painting</p><ul><li>I`ve been playing football for as long as I can remenber</li></ul><p>I`ve been painting for donkey`s years -&gt; for a long time</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;雅思口语&quot;&gt;&lt;a href=&quot;#雅思口语&quot; class=&quot;headerlink&quot; title=&quot;雅思口语&quot;&gt;&lt;/a&gt;雅思口语&lt;/h1&gt;&lt;h2 id=&quot;Talk-about-your-free-time&quot;&gt;&lt;a href=&quot;#Talk-about-your-free-time&quot; class=&quot;headerlink&quot; title=&quot;Talk about your free time&quot;&gt;&lt;/a&gt;Talk about your free time&lt;/h2&gt;&lt;h3 id=&quot;The-styles-of-hobbies&quot;&gt;&lt;a href=&quot;#The-styles-of-hobbies&quot; class=&quot;headerlink&quot; title=&quot;The styles of hobbies&quot;&gt;&lt;/a&gt;The styles of hobbies&lt;/h3&gt;&lt;h4 id=&quot;Indoor-activities&quot;&gt;&lt;a href=&quot;#Indoor-activities&quot; class=&quot;headerlink&quot; title=&quot;Indoor activities&quot;&gt;&lt;/a&gt;Indoor activities&lt;/h4&gt;&lt;p&gt;Chilling out &amp;#x2F;hanging out with friends&lt;/p&gt;
&lt;h4 id=&quot;outdoor-activities&quot;&gt;&lt;a href=&quot;#outdoor-activities&quot; class=&quot;headerlink&quot; title=&quot;outdoor activities&quot;&gt;&lt;/a&gt;outdoor activities&lt;/h4&gt;&lt;p&gt;traveling&amp;#x2F; gardening &amp;#x2F;aports&lt;/p&gt;
&lt;h4 id=&quot;collecting-thins&quot;&gt;&lt;a href=&quot;#collecting-thins&quot; class=&quot;headerlink&quot; title=&quot;collecting thins&quot;&gt;&lt;/a&gt;collecting thins&lt;/h4&gt;&lt;p&gt;stamps &amp;#x2F;coins &amp;#x2F;nfts&amp;#x3D;non-fungible token(a unique item)&lt;/p&gt;
&lt;h4 id=&quot;Creative-activities&quot;&gt;&lt;a href=&quot;#Creative-activities&quot; class=&quot;headerlink&quot; title=&quot;Creative activities&quot;&gt;&lt;/a&gt;Creative activities&lt;/h4&gt;&lt;p&gt;playing a musical instrument &amp;#x2F;paiting &amp;#x2F;knitting &amp;#x2F; taking photos&lt;/p&gt;
&lt;h3 id=&quot;Express&quot;&gt;&lt;a href=&quot;#Express&quot; class=&quot;headerlink&quot; title=&quot;Express&quot;&gt;&lt;/a&gt;Express&lt;/h3&gt;</summary>
    
    
    
    
    <category term="雅思， 英语， 学习" scheme="http://example.com/tags/%E9%9B%85%E6%80%9D%EF%BC%8C-%E8%8B%B1%E8%AF%AD%EF%BC%8C-%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java基础题</title>
    <link href="http://example.com/archives/7e6e1194.html"/>
    <id>http://example.com/archives/7e6e1194.html</id>
    <published>2022-09-16T02:59:41.000Z</published>
    <updated>2022-09-16T03:02:33.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java基础题"><a href="#Java基础题" class="headerlink" title="Java基础题"></a>Java基础题</h1><h3 id="JVM、JRE及JDK的关系"><a href="#JVM、JRE及JDK的关系" class="headerlink" title="JVM、JRE及JDK的关系"></a>JVM、JRE及JDK的关系</h3><p>开发工具：JDK（Java Development Kit），Java的核心， 包括JRE + Java工具+ java基础类库运行环境：</p><p> JRE（Java Runtime Environment）运行Java所需的环境的集合，包括JVM标准实现+Java核心类库</p><p>虚拟机： JVM（Java virtual Machine）Java实现跨平台的核心</p><h3 id="Java特点"><a href="#Java特点" class="headerlink" title="Java特点"></a>Java特点</h3><p>面向对象</p><p>通过虚拟机实现平台无关性</p><p>多线程</p><p>网络编程</p><p>较高安全性可靠性</p><span id="more"></span><h3 id="Java和c-区别"><a href="#Java和c-区别" class="headerlink" title="Java和c++区别"></a>Java和c++区别</h3><p>Java 通过虚拟机从而实现跨平台特性，但是 C++ 依赖于特定的平台。 </p><p>Java 没有指针，它的引用可以理解为安全指针，而 C++ 具有和 C 一样的指针。 </p><p>Java 支持自动垃圾回收，而 C++ 需要手动回收。 </p><p>Java 不支持多重继承，只能通过实现多个接口来达到相同目的，而 C++ 支持多重继承。</p><p>Java 不支持操作符重载，虽然可以对两个 String 对象执行加法运算，但是这是语言内置支持的操作，不属于操作符重载，而 C++ 可以。 </p><p>Java 的 goto 是保留字，但是不可用，C++ 可以使用 goto。</p><h3 id="Java的基本数据类型8种"><a href="#Java的基本数据类型8种" class="headerlink" title="Java的基本数据类型8种"></a>Java的基本数据类型8种</h3><p>String不是</p><h3 id="隐式类型转换、显示类型转换（自动，强转）"><a href="#隐式类型转换、显示类型转换（自动，强转）" class="headerlink" title="隐式类型转换、显示类型转换（自动，强转）"></a>隐式类型转换、显示类型转换（自动，强转）</h3><p>隐式(自动)类型转换：从存储范围小的类型到存储范围大的类型。byte→short(char)→int→long→float→double 显示(强制)类型转换：从存储范围大的类型到存储范围小的类型。double→float→long→int→short(char)→byte。该类类型转换很可能存在精度的损失</p><p>看一个经典的代码 </p><p>short s &#x3D; 1; s &#x3D; s + 1; </p><p>这是会报错的，因为1是int型，s+1会自动转换为int型，将int型直接赋值给short型会报错。 </p><p>做一下修改即可避免报错 short s &#x3D; 1;</p><p> s &#x3D; (short)(s + 1); </p><p>或这样写，因为s +&#x3D; 1会自动进行强制类型转换 short s &#x3D; 1; s +&#x3D; 1;</p><h3 id="自动装箱与拆箱"><a href="#自动装箱与拆箱" class="headerlink" title="自动装箱与拆箱"></a>自动装箱与拆箱</h3><p>自动装箱： 将基本类型用包装器类型包装起来</p><p>自动拆箱： </p><p>在Integer源码的valueOf()中的IntegerCache（）里面，如果数值在[-128,127]之间，便返回指向IntegerCache.cache中已经存在的对象的引用；否则创建一个新的Integer对象。</p><p>【a &#x3D; 128, b &#x3D; 128】true</p><p>【c&#x3D; 128, d &#x3D; 128】false  </p><p>Double的valueOf方法，每次返回都是重新new一个新的对象</p><p>【Double a &#x3D; 1.0; Double b &#x3D; 1.0;】false</p><p>【 Double c &#x3D; 2.0; Double d &#x3D; 2.0;】false</p><p>Boolean的valueOf中，定义的false和true是静态成员属性</p><p>【Boolean a &#x3D; false; Boolean b &#x3D; false;】true</p><p>【 Boolean c &#x3D; true; Boolean d &#x3D; true;】true</p><ol><li>当 “&#x3D;&#x3D;”运算符的两个操作数都是包装器类型的引用，则是比较指向的是否是同一个对象，而如果其中有一个操作数是表达式（即包含算术运算）则比较的是数值（即会触发自动拆箱的过程）。所以c&#x3D;&#x3D;a+b，g&#x3D;&#x3D;a+b为true。</li></ol><p>若比较基本数据类型，比较的是两个变量保存的数据是否相等（不一定数据类型要相同）</p><p>   若比较的是引用数据类型，比较的是两个变量的地址值是否相同 ,即两个引用是否指向同一个对象实体</p><ol><li>而对于equals方法会先触发自动拆箱过程，再触发自动装箱过程。也就是说a+b，会先各自调用intValue方法，得到了加法运算后的数值之后，便调用Integer.valueOf方法，再进行equals比较。所以c.equals(a+b)为true。</li></ol><p>【Long g &#x3D; 3L;】而对于g.equals(a+b)，a+b会先拆箱进行相加运算，在装箱进行equals比较，但是装箱后为Integer，g为Long，所以g.equals(a+b)为false</p><p>equals（） ：是一个方法而非运算符   格式： syso(cust1.equals(cust2));</p><p>①只适用于引用数据类型</p><p>②object类中equals（）的定义 与 “&#x3D;&#x3D;”的作用相同：比较实际内容</p><p>  public boolean equals(Object obj){</p><pre><code>  return \(this == obj\)</code></pre><p> }</p><p>③像String、Date、File、包装类等重写了Object类中的equals（）方法后，比较的不再是引用的地址，而是比较两个对象的“实体内容”是否相同</p><ol><li>int1 &#x3D;&#x3D; int2为true无需解释，int1 &#x3D;&#x3D; integer1，在进行比较时，integer1会先进行一个拆箱操作变成int型在进行比较，所以int1 &#x3D;&#x3D; integer1为true。</li><li>【Integer integer1 &#x3D; new Integer(12);】</li></ol><p>【 Integer integer2 &#x3D; new Integer(12);】</p><p>【 Integer integer3 &#x3D; new Integer(1);】 </p><p>integer1 &#x3D;&#x3D; integer2-&gt;false。integer1和integer2都是通过new关键字创建的，可以看成两个对象，所以integer1 &#x3D;&#x3D; integer2 为false。integer3 &#x3D;&#x3D; a -&gt; false , integer3是一个对象类型，而a1是一个常量它们存放内存的位置不一样，所以integer3 &#x3D;&#x3D; a1为false，具体原因可学习下java的内存模型。  </p><h3 id="String不可变性原因和好处"><a href="#String不可变性原因和好处" class="headerlink" title="String不可变性原因和好处"></a>String不可变性原因和好处</h3><p>String 内部使用 char 数组存储数据。并且被声明为final，因此它不可被继承。</p><p>（不可变性的好处）:</p><ol><li>可以缓存 hash 值（ ） 因为 String 的hash值经常被使用，例如String 用做 HashMap 的 key。不可变的特性可以使得 hash值也不可变， 因此只需要进行一次计算。</li><li>常量池优化 String 对象创建之后，会在字符串常量池中进行缓存，如果下次创建同样的对象时，会直接返回缓存的引用。 </li><li>线程安全 String 不可变性天生具备线程安全，可以在多个线程中安全地使用。</li></ol><h3 id="字符常量与字符串常量"><a href="#字符常量与字符串常量" class="headerlink" title="字符常量与字符串常量"></a>字符常量与字符串常量</h3><ol><li>形式： 字符‘ ’    字符串“ ”</li><li>含义： 字符&#x3D;一个整型值，可以运算，字符串&#x3D;一个地址值</li><li>占内存： 字符&#x3D;2个字节  字符串&#x3D;若干（至少一个字符）</li></ol><h3 id="字符串常量池"><a href="#字符串常量池" class="headerlink" title="字符串常量池"></a>字符串常量池</h3><p>字符串常量池位于堆内存中，专门用来存储字符串常量，可以提高内存的使用率，避免开辟多块空间存储相同的字符串</p><p>在创建字符串时 JVM 会首先检查字符串常量池，如果该字符串已经存在池中，则返回它的引用，如果不存在，则实例化一个字符串放到池中，并返回其引用。  </p><h3 id="String常用方法"><a href="#String常用方法" class="headerlink" title="String常用方法"></a>String常用方法</h3><p>length()：返回字符串长度 </p><p>charAt()：返回指定索引处的字符 </p><p>substring()：截取字符串 </p><p>trim()：去除字符串两端空白 </p><p>split()：分割字符串，返回一个分割后的字符串数组。 </p><p>replace()：字符串替换。 </p><p>indexOf()：返回指定字符的索引。 </p><p>toLowerCase()：将字符串转成小写字母。 </p><p>toUpperCase()：将字符串转成大写字符。  </p><h3 id="String-StringBuffer-StringBuilder"><a href="#String-StringBuffer-StringBuilder" class="headerlink" title="String,StringBuffer,StringBuilder"></a>String,StringBuffer,StringBuilder</h3><ol><li>可变性：String不可变 其他俩能</li><li>线程安全：String由于是不可变的，所以线程安全。StringBuffer对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的。 StringBuilder并没有对方法进行加同步锁，所以是非线程安全的。</li><li>性能： StringBuilder &gt; StringBuffer &gt; String</li></ol><h3 id="switch能作用在哪里"><a href="#switch能作用在哪里" class="headerlink" title="switch能作用在哪里"></a>switch能作用在哪里</h3><p>可以作用在 char byte short int 及对应的包装类</p><p>不可以 long double float boolean及包装类</p><p>JDK1.5之后枚举类型</p><p>JDK1.7之后String类型</p><h3 id="Java采用何种编码方式"><a href="#Java采用何种编码方式" class="headerlink" title="Java采用何种编码方式"></a>Java采用何种编码方式</h3><p>Unicode编码标准，为每一个字符制定一个唯一的数值</p><p>任何语言平台程序都能使用</p><h3 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h3><p>public : 对所有类可见。使用对象：类、接口、变量、方法</p><p>protected : 对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）。 default : 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。 </p><p>private : 在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>&amp;&amp;、&amp;</p><p>共同点是他们两边的条件都成立的时候最终结果才是true；不同点是&amp;&amp;只要是第一个条件不成立为false，就不会再去判断第二个条件，最终结果直接为false，而&amp;判断的是所有的条件  </p><p>|| 、 |</p><p>||和|都表示逻辑或，共同点是只要两个判断条件其中有一个成立最终的结果就是true，区别是||只要满足第一个条件，后面的条件就不再判断，而|要对所有的条件进行判断。  </p><h3 id="static（修饰变量和方法）"><a href="#static（修饰变量和方法）" class="headerlink" title="static（修饰变量和方法）"></a>static（修饰变量和方法）</h3><p>static关键字的主要用途就是方便在没有创建对象时调用方法和变量和优化程序性能  </p><p>1.static变量（静态变量）<br>用static修饰的变量被称为静态变量，也被称为类变量，可以直接通过类名来访问它。静态变量被所有的对象共享，在内存中只有一个副本，仅当在类初次加载时会被初始化，而非静态变量在创建对象的时候被初始化，并且存在多个副本，各个对象拥有的副本互不影响。<br>2.static方法(静态方法)<br>static方法不依赖于任何对象就可以进行访问，在static方法中不能访问类的非静态成员变量和非静态成员方法，因为非静态成员方法&#x2F;变量都是必须依赖具体的对象才能够被调用，但是在非静态成员方法中是可以访问静态成员方法&#x2F;变量的。  </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java基础题&quot;&gt;&lt;a href=&quot;#Java基础题&quot; class=&quot;headerlink&quot; title=&quot;Java基础题&quot;&gt;&lt;/a&gt;Java基础题&lt;/h1&gt;&lt;h3 id=&quot;JVM、JRE及JDK的关系&quot;&gt;&lt;a href=&quot;#JVM、JRE及JDK的关系&quot; class=&quot;headerlink&quot; title=&quot;JVM、JRE及JDK的关系&quot;&gt;&lt;/a&gt;JVM、JRE及JDK的关系&lt;/h3&gt;&lt;p&gt;开发工具：JDK（Java Development Kit），Java的核心， 包括JRE + Java工具+ java基础类库运行环境：&lt;/p&gt;
&lt;p&gt; JRE（Java Runtime Environment）运行Java所需的环境的集合，包括JVM标准实现+Java核心类库&lt;/p&gt;
&lt;p&gt;虚拟机： JVM（Java virtual Machine）Java实现跨平台的核心&lt;/p&gt;
&lt;h3 id=&quot;Java特点&quot;&gt;&lt;a href=&quot;#Java特点&quot; class=&quot;headerlink&quot; title=&quot;Java特点&quot;&gt;&lt;/a&gt;Java特点&lt;/h3&gt;&lt;p&gt;面向对象&lt;/p&gt;
&lt;p&gt;通过虚拟机实现平台无关性&lt;/p&gt;
&lt;p&gt;多线程&lt;/p&gt;
&lt;p&gt;网络编程&lt;/p&gt;
&lt;p&gt;较高安全性可靠性&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java, 学习" scheme="http://example.com/tags/Java-%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Javaweb</title>
    <link href="http://example.com/archives/a13f4dfc.html"/>
    <id>http://example.com/archives/a13f4dfc.html</id>
    <published>2022-09-16T02:55:57.000Z</published>
    <updated>2022-09-16T02:58:37.058Z</updated>
    
    <content type="html"><![CDATA[<p>Javaweb</p><p>目录</p><p><a href="#_Toc114217974">jdbc3</a></p><p><a href="#_Toc114217975">JDBC API详解4</a></p><p><a href="#_Toc114217976">案例6</a></p><p><a href="#_Toc114217977">6</a></p><p><a href="#_Toc114217978">案例11</a></p><p><a href="#_Toc114217979">Maven14</a></p><p><a href="#_Toc114217980">MyBatis16</a></p><span id="more"></span><h1 id="jdbc"><a href="#jdbc" class="headerlink" title="jdbc"></a><a id="_Toc114217974"></a>jdbc</h1><h5 id="Test"><a href="#Test" class="headerlink" title="@Test"></a>@Test</h5><h5 id="x2F"><a href="#x2F" class="headerlink" title="&#x2F;**"></a>&#x2F;**</h5><pre><code> \* 查询account账户表数据，封装为Account对象中，并且存储到ArrayList集合中   \* 1\.定义实体类Account   \* 2\.查询数据，封装Account对象中   \* 3\.将Account对象存入ArrayList集合中   \*/  __public void __testResultSet2\(\) __throws __Exception \&#123;      //1\. 注册驱动  </code></pre><p>&#x2F;&#x2F;        Class.forName(“com.mysql.jdbc.Driver”);  </p><pre><code>    //2\. 获取连接 默认主机可简写  去掉红字      String url = __&quot;jdbc:mysql:///db1?useSSL=false&quot;__;      String username = __&quot;root&quot;__;      String password = __&quot;abc123&quot;__;      Connection conn = DriverManager\.getConnection\(url, username, password\);      //3\. 定义SQL      String sql = __&quot;select __\*__ from stu&quot;__;      //4\. 获取statement对象      Statement stmt = conn\.createStatement\(\);      //5\. 执行sql      ResultSet rs = stmt\.executeQuery\(sql\);      //创建集合      ArrayList&lt;Object&gt; list = __new __ArrayList&lt;&gt;\(\);      //6\. 处理结果，遍历rs的所有数据      //  6\.1 光标向下移动一行并判断是否有数据      __while __\(rs\.next\(\)\)\&#123;          Account account = __new __Account\(\);          //6\.2 获取数据 getXxx\(\)  </code></pre><p>&#x2F;&#x2F;            int id &#x3D; rs.getInt(1);<br>&#x2F;&#x2F;            String name &#x3D; rs.getString(2);<br>&#x2F;&#x2F;            int age &#x3D; rs.getInt(3);  </p><pre><code>        __int __id = rs\.getInt\(__&quot;id&quot;__\);          String name = rs\.getString\(__&quot;name&quot;__\);          __int __age = rs\.getInt\(__&quot;age&quot;__\);          //赋值          account\.setId\(id\);          account\.setName\(name\);          account\.setAge\(age\);          //存入集合          list\.add\(account\);      \&#125;      System\.__out__\.println\(list\);  \&#125;</code></pre><h5 id="package-com-itheima-jdbc"><a href="#package-com-itheima-jdbc" class="headerlink" title="__package __com.itheima.jdbc;"></a>__package __com.itheima.jdbc;</h5><h5 id="import-org-junit-Test"><a href="#import-org-junit-Test" class="headerlink" title="__import __org.junit.Test;"></a>__import __org.junit.Test;</h5><p>__import __java.sql.*;  </p><p>__public class __Demo5_PreparedStatement {  </p><pre><code>@Test  __public void __testPreparedStatement\(\) __throws __Exception \&#123;      *//2\. 获取连接 默认主机可简写  去掉红字      *String url = __&quot;jdbc:mysql:///db1?useSSL=false&quot;__;      String username = __&quot;root&quot;__;      String password = __&quot;abc123&quot;__;      Connection conn = DriverManager\.*getConnection*\(url, username, password\);      *//接受用户输入 用户名和密码      *String name = __&quot;zhangsansfrere&quot;__;      String pwd = __&quot;&#39; or &#39;1&#39; = &#39;1&quot;__;  </code></pre><p><em>&#x2F;&#x2F;定义sql<br>        <em>String sql &#x3D; __”select __</em>*</em>__ from tb_user where username &#x3D; ? and password &#x3D; ?”__;  </p><pre><code>    *//获取pstmt对象      *PreparedStatement pstmt = conn\.prepareStatement\(sql\);      *//设置？的值      *pstmt\.setString\(1,name\);      pstmt\.setString\(2,pwd\);      *//执行sql      *ResultSet re = pstmt\.executeQuery\(\);      *//判断登录成功\-rs里面有数据即可      *__if __\(re\.next\(\)\)\&#123;          System\.__*out*__\.println\(__&quot;登录成功！&quot;__\);      \&#125;__else __\&#123;          System\.__*out*__\.println\(__&quot;登录是吧&quot;__\);      \&#125;  </code></pre><p>*&#x2F;&#x2F;        &#x2F;&#x2F;7. 释放资源<br>        *pstmt.close();<br>        conn.close();<br>    }<br>}</p><h5 id="select-from-tb-user-where-username-x3D-‘zhangsansfrere’-and-password-x3D-‘-‘-or-‘1-‘-x3D-‘1’"><a href="#select-from-tb-user-where-username-x3D-‘zhangsansfrere’-and-password-x3D-‘-‘-or-‘1-‘-x3D-‘1’" class="headerlink" title="select * from tb_user where username &#x3D; ‘zhangsansfrere’ and password &#x3D; ‘\‘ or \‘1\‘ &#x3D; \‘1’"></a>select * from tb_user where username &#x3D; ‘zhangsansfrere’ and password &#x3D; ‘\‘ or \‘1\‘ &#x3D; \‘1’</h5><p>将敏感字符转义为文本</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Javaweb&lt;/p&gt;
&lt;p&gt;目录&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc114217974&quot;&gt;jdbc	3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc114217975&quot;&gt;JDBC API详解	4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc114217976&quot;&gt;案例	6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc114217977&quot;&gt;	6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc114217978&quot;&gt;案例	11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc114217979&quot;&gt;Maven	14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc114217980&quot;&gt;MyBatis	16&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Mysql学习笔记</title>
    <link href="http://example.com/archives/7f3b056.html"/>
    <id>http://example.com/archives/7f3b056.html</id>
    <published>2022-09-16T02:31:56.000Z</published>
    <updated>2022-09-16T02:50:40.637Z</updated>
    
    <content type="html"><![CDATA[<p>目录</p><p><a href="#_Toc113178006">SQL分类6</a></p><p><a href="#_Toc113178007">1.DDL 数据定义语言(表头)6</a></p><p><a href="#_Toc113178008">1.1 数据库操作6</a></p><p><a href="#_Toc113178009">1.2表操作6</a></p><p><a href="#_Toc113178010">2.DML 数据操作语言（表的增删改insert into、values）8</a></p><p><a href="#_Toc113178011">2.1添加数据8</a></p><p><a href="#_Toc113178012">2.2更新和删除数据（update、delete）8</a></p><p><a href="#_Toc113178013">修改数据：8</a></p><span id="more"></span><p><a href="#_Toc113178014">3.DQL 数据查询语言（查询多表where、group by、having、order by）9</a></p><p><a href="#_Toc113178015">3.1语法9</a></p><p><a href="#_Toc113178016">3.2 基础查询9</a></p><p><a href="#_Toc113178017">3.3 条件查询 语法：9</a></p><p><a href="#_Toc113178018">3.4 聚合函数11</a></p><p><a href="#_Toc113178019">3.5 分组查询12</a></p><p><a href="#_Toc113178020">3.6 排序查询12</a></p><p><a href="#_Toc113178021">3.7 分页查询（LIMT）13</a></p><p><a href="#_Toc113178022">4.DCL 数据控制语言14</a></p><p><a href="#_Toc113178023">4.1管理用户：14</a></p><p><a href="#_Toc113178024">4.2权限控制：14</a></p><p><a href="#_Toc113178025">函数16</a></p><p><a href="#_Toc113178026">1. 内置函数：单行、多行函数16</a></p><p><a href="#_Toc113178027">1.1单行函数16</a></p><p><a href="#_Toc113178028">2数值函数16</a></p><p><a href="#_Toc113178029">2.1基本函数16</a></p><p><a href="#_Toc113178030">2.2三角函数16</a></p><p><a href="#_Toc113178031">2.3指数对数函数17</a></p><p><a href="#_Toc113178032">2.4进制间的转换17</a></p><p><a href="#_Toc113178033">3.字符串字符17</a></p><p><a href="#_Toc113178034">4.日期函数18</a></p><p><a href="#_Toc113178035">5 流程函数19</a></p><p><a href="#_Toc113178036">约束21</a></p><p><a href="#_Toc113178037">常用约束21</a></p><p><a href="#_Toc113178038">外键约束21</a></p><p><a href="#_Toc113178039">添加外键：21</a></p><p><a href="#_Toc113178040">删除&#x2F;更新行为22</a></p><p><a href="#_Toc113178041">多表查询24</a></p><p><a href="#_Toc113178042">1.连接24</a></p><p><a href="#_Toc113178043">查询24</a></p><p><a href="#_Toc113178044">内连接查询25</a></p><p><a href="#_Toc113178045">外连接查询25</a></p><p><a href="#_Toc113178046">自连接查询26</a></p><p><a href="#_Toc113178047">联合查询 union, union all27</a></p><p><a href="#_Toc113178048">子查询27</a></p><p><a href="#_Toc113178049">标量子查询28</a></p><p><a href="#_Toc113178050">列子查询28</a></p><p><a href="#_Toc113178051">行子查询29</a></p><p><a href="#_Toc113178052">表子查询29</a></p><p><a href="#_Toc113178053">事务30</a></p><p><a href="#_Toc113178054">事务操作1：30</a></p><p><a href="#_Toc113178055">事务操作2：31</a></p><p><a href="#_Toc113178056">事务四大特性32</a></p><p><a href="#_Toc113178057">并发事务32</a></p><p><a href="#_Toc113178058">并发事务隔离级别：32</a></p><p><a href="#_Toc113178059">进阶-存储引擎34</a></p><p><a href="#_Toc113178060">存储引擎特点35</a></p><p><a href="#_Toc113178061">InnoDB（默认引擎）35</a></p><p><a href="#_Toc113178062">特点：35</a></p><p><a href="#_Toc113178063">文件：35</a></p><p><a href="#_Toc113178064">MyISAM36</a></p><p><a href="#_Toc113178065">特点：36</a></p><p><a href="#_Toc113178066">文件：37</a></p><p><a href="#_Toc113178067">Memory37</a></p><p><a href="#_Toc113178068">特点：37</a></p><p><a href="#_Toc113178069">文件：37</a></p><p><a href="#_Toc113178070">Memory37</a></p><p><a href="#_Toc113178071">存储引擎特点38</a></p><p><a href="#_Toc113178072">存储引擎的选择38</a></p><p><a href="#_Toc113178073">安装Linux39</a></p><p><a href="#_Toc113178074">安装mysql遇到的问题39</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目录&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178006&quot;&gt;SQL分类	6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178007&quot;&gt;1.	DDL 数据定义语言(表头)	6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178008&quot;&gt;1.1 数据库操作	6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178009&quot;&gt;1.2	表操作	6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178010&quot;&gt;2.	DML 数据操作语言（表的增删改insert into、values）	8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178011&quot;&gt;2.1	添加数据	8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178012&quot;&gt;2.2	更新和删除数据（update、delete）	8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#_Toc113178013&quot;&gt;修改数据：	8&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>FirstPage</title>
    <link href="http://example.com/archives/eb4aebd3.html"/>
    <id>http://example.com/archives/eb4aebd3.html</id>
    <published>2022-09-11T11:22:05.000Z</published>
    <updated>2022-09-16T02:50:49.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>图片测试：</p><p><img src="https://img-blog.csdnimg.cn/021683368cb14d4fbfbb62a0c6e7fc87.jpeg"><br><img src="https://img-blog.csdnimg.cn/688c848fc35c4382a54cde6c1dc3217a.jpeg"> </p><p>引用测试：</p><blockquote><p>这是一条引用</p></blockquote><span id="more"></span><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>无序列表测试：</p><ul><li>哈哈</li><li>嘿嘿</li><li>吼吼</li></ul><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;p&gt;图片测试：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/021683368cb14d4fbfbb62a0c6e7fc87.jpeg&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/688c848fc35c4382a54cde6c1dc3217a.jpeg&quot;&gt; &lt;/p&gt;
&lt;p&gt;引用测试：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一条引用&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="testPage" scheme="http://example.com/tags/testPage/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/archives/4a17b156.html"/>
    <id>http://example.com/archives/4a17b156.html</id>
    <published>2022-09-11T02:43:04.440Z</published>
    <updated>2022-09-11T11:59:54.250Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
